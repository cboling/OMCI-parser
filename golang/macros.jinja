{%-macro generate_msgTypes(msgTypes)-%}
    {%-for type in msgTypes|sort(attribute='name')%}
			{{ type.name }},
    {%-endfor-%}
{%-endmacro-%}

{% macro attribute_field(size) %}
    {%- if size.octets == 1 -%}
ByteField
    {%- elif size.octets == 2 -%}
Uint16Field
    {%- elif size.octets == 4 -%}
Uint32Field
    {%- elif size.octets == 8 -%}
Uint64Field
    {%- else -%}
MultiByteField
    {%- endif -%}
{% endmacro %}

{% macro attribute_zero_default(size) %}
    {%- if size.octets == 1 -%}
0
    {%- elif size.octets == 2 -%}
0
    {%- elif size.octets == 4 -%}
0
    {%- elif size.octets == 8 -%}
0
    {%- else -%}
{{size.octets}}, nil
    {%- endif -%}
{% endmacro %}

{% macro boolean_field(support) %}
    {%- if support -%}
true
    {%- else -%}
false
    {%- endif -%}
{%-endmacro-%}

{%-macro access_fields(access)-%}
	{%-for access_type in access|sort(attribute='name')-%}
		{% if not loop.first %}|{% endif %}{{access_type.name}}
	{%-endfor-%}
{%-endmacro-%}

{%- macro generate_attributes(classID) -%}
	{%for attr in classID.attributes%}
			{% if attr.table_support -%}
{{loop.index-1}}: {% if loop.index-1 < 10 and classID.attributes|length > 10 %} {% endif %}TableField("{{attr.name|camelcase}}", TableInfo{{ '{' }}{{attribute_zero_default(attr.size)}}, {{attr.size.octets}}}, {{access_fields(attr.access)}}, {{boolean_field(attr.avc)}}, {{boolean_field(attr.optional)}}),
			{%- else -%}
{{loop.index-1}}: {% if loop.index-1 < 10 and classID.attributes|length > 10 %} {% endif %}{{attribute_field(attr.size)}}("{{attr.name|camelcase}}", {{attribute_zero_default(attr.size)}}, {{access_fields(attr.access)}}, {{boolean_field(attr.avc)}}, {{boolean_field(attr.counter)}}, {{boolean_field(attr.optional)}}),
			{%- endif -%}
	{%-endfor-%}
{%- endmacro -%}

def maskit(

{%- macro attribute_mask(classID) -%}
    {%- set mask = namespace(value=0) -%}
	{%- for attr in classID.attributes -%}
		{%- if loop.index > 1 -%}
			{%- set pow = (2 ** (17-loop.index)) -%}
			{%- set mask.value = pow + mask.value -%}
			{%- if loop.last -%}{{ '%#0X' % mask.value }}{%- endif -%}
		{%- endif -%}
	{%- endfor -%}
{%- endmacro -%}