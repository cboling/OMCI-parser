{% import 'macros.jinja' as Macros with context -%}
{{copyright}}
{{generator_warning}}
package {{package_name}}
{# blank line #}

import (
	"fmt"
)

// Attribute represents a single specific Managed Entity attribute
type IAttribute interface {
	// Name is the attribute name
	GetName() string
	GetSize() int
	GetDefault() interface{}
	GetAccess() AttributeAccess
	GetValue() (interface{}, error)
}

// Attribute represents a single specific Managed Entity attribute
type Attribute struct {
	Name       string
	DefValue   interface{}
	Size       int
	Access     AttributeAccess
	Value      interface{}
	Constraint func(interface{}) error
	Avc        bool // If true, an AVC notification can occur for the attribute
	Tca        bool // If true, a threshold crossing alert alarm notification can occur for the attribute
	Counter    bool // If true, this attribute is a PM counter
	Optional   bool // If true, attribute is option, else mandatory
	Deprecated bool //  If true, this attribute is deprecated and only 'read' operations (if-any) performed
}

func (attr *Attribute) String() string {
	return fmt.Sprintf("%v: Size: %v, Default: %v, Access: %v",
		attr.GetName(), attr.GetSize(), attr.GetDefault(), attr.GetAccess())
}
func (attr *Attribute) GetName() string            { return attr.Name }
func (attr *Attribute) GetDefault() interface{}    { return attr.DefValue }
func (attr *Attribute) GetSize() int               { return attr.Size }
func (attr *Attribute) GetAccess() AttributeAccess { return attr.Access }
func (attr *Attribute) GetValue() (interface{}, error) {
	// TODO: Better way to detect not-initialized and no default available?
	return attr.Value, nil
}

///////////////////////////////////////////////////////////////////////
//
type ByteField struct {
	Attribute
}

func NewByteField(name string, defVal uint16, access AttributeAccess) *ByteField {
	return &ByteField{
		Attribute: Attribute{Name: name, DefValue: defVal, Size: 1, Access: access},
	}
}

type Uint16Field struct {
	Attribute
}

func NewUint16Field(name string, defVal uint16, access AttributeAccess) *Uint16Field {
	return &Uint16Field{
		Attribute: Attribute{Name: name, DefValue: defVal, Size: 2, Access: access},
	}
}

type Uint32Field struct {
	Attribute
}

func NewUint32Field(name string, defVal uint16, access AttributeAccess) *Uint32Field {
	return &Uint32Field{
		Attribute: Attribute{Name: name, DefValue: defVal, Size: 4, Access: access},
	}
}

type Uint64Field struct {
	Attribute
}

func NewUint64Field(name string, defVal uint16, access AttributeAccess) *Uint64Field {
	return &Uint64Field{
		Attribute: Attribute{Name: name, DefValue: defVal, Size: 8, Access: access},
	}
}

// TODO: UnknownField is just a placeholder to catch unhandled Attribute sizes/structs
type UnknownField struct {
	Attribute
}

func NewUnknownField(name string, defVal uint16, access AttributeAccess) *UnknownField {
	return &UnknownField{
		Attribute: Attribute{Name: name, DefValue: defVal, Size: 999999999, Access: access},
	}
}
