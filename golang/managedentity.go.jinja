{#-
Copyright (c) 2018 - present.  Boling Consulting Solutions (bcsw.net)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-#}
{%- import 'macros.jinja' as Macros with context -%}
{%- import 'macros.go.jinja' as GoMacros with context -%}
{{copyright}}
{{generator_warning}}
{# blank line #}
package {{package_name}}
{# blank line #}
import "github.com/deckarep/golang-set"
{# blank line #}
// {{classID.name|camelcase}}ClassId is the 16-bit ID for the OMCI
// Managed entity {{classID.name}}
const {{classID.name|camelcase}}ClassId ClassID = ClassID({{classID.cid}})
{# blank line #}
var {{classID.name|camelcase|lower}}BME *ManagedEntityDefinition
{# blank line #}
// {{ classID.name|camelcase }} (class ID #{{classID.cid}})
{{ GoMacros.class_description(classID.text_section('description')) -}}
{{ GoMacros.class_relationships(classID.text_section('relationships')) -}}
{{ GoMacros.class_attributes(classID.text_section('attributes')) }}
//{# TODO: ADD Alarms, Notifications, and Test Result documentation #}
type {{ classID.name|camelcase }} struct {
	ManagedEntityDefinition
	Attributes AttributeValueMap
}
{# blank line #}
func init() {
	{{classID.name|camelcase|lower}}BME = &ManagedEntityDefinition{
		Name:    "{{ classID.name|camelcase }}",
		ClassID: {{ classID.cid }},
		MessageTypes: mapset.NewSetWith(
			{%-if classID.actions|length %}{{Macros.generate_msgTypes(classID.actions)}}{%endif%}
			{%-if classID.optional_actions|length %}{{Macros.generate_msgTypes(classID.optional_actions)}}{%endif%}
		),
		AllowedAttributeMask: {{Macros.attribute_mask(classID)}},
		AttributeDefinitions: AttributeDefinitionMap{
			{%-if classID.attributes|length %}{{Macros.generate_attributes(classID)}}{%endif%}
		},
	}
}
{# blank line #}
// New{{classID.name|camelcase }} (class ID {{classID.cid}} creates the basic
// Managed Entity definition that is used to validate an ME of this type that
// is received from the wire, about to be sent on the wire.
func New{{ classID.name|camelcase }}(params ...ParamData) (*ManagedEntity, OmciErrors) {
	return NewManagedEntity(*{{classID.name|camelcase|lower}}BME, params...)
}
{# blank line #}
